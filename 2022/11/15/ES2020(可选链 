<!DOCTYPE html>
<html lang=zh>
<head>
    <!-- so meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="HandheldFriendly" content="True">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5" />
    <meta name="description" content="…可选链 ?. 是一种访问嵌套对象属性的安全的方式。即使中间的属性不存在，也不会出现错误。 “不存在的属性”的问题如果你才刚开始读此教程并学习 JavaScript，那可能还没接触到这个问题，但它却相当常见。 举个例子，假设我们有很多个 user 对象，其中存储了我们的用户数据。 我们大多数用户的地址都存储在 user.address 中，街道地址存储在 user.address.street 中">
<meta property="og:type" content="article">
<meta property="og:title" content="ES2020(可选链 ?.)">
<meta property="og:url" content="http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE">
<meta property="og:site_name" content="玉印说">
<meta property="og:description" content="…可选链 ?. 是一种访问嵌套对象属性的安全的方式。即使中间的属性不存在，也不会出现错误。 “不存在的属性”的问题如果你才刚开始读此教程并学习 JavaScript，那可能还没接触到这个问题，但它却相当常见。 举个例子，假设我们有很多个 user 对象，其中存储了我们的用户数据。 我们大多数用户的地址都存储在 user.address 中，街道地址存储在 user.address.street 中">
<meta property="og:locale" content="zh_CN">
<meta property="article:published_time" content="2022-11-14T16:00:00.000Z">
<meta property="article:modified_time" content="2023-09-01T05:37:46.596Z">
<meta property="article:author" content="玉印">
<meta property="article:tag" content="#">
<meta name="twitter:card" content="summary">
    
    
      
        
          <link rel="shortcut icon" href="/images/favicon.ico">
        
      
      
        
          <link rel="icon" type="image/png" href="/images/favicon-192x192.png" sizes="192x192">
        
      
      
        
          <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png">
        
      
    
    <!-- title -->
    <title>ES2020(可选链 ?.)</title>
    <!-- async scripts -->
    <!-- Google Analytics -->


    <!-- Umami Analytics -->


    <!-- styles -->
    
<link rel="stylesheet" href="/css/style.css">

    <!-- persian styles -->
    
    <!-- rss -->
    
    
	<!-- mathjax -->
	
<meta name="generator" content="Hexo 6.3.0"></head>

<body class="max-width mx-auto px3 ltr">
    
      <div id="header-post">
  <a id="menu-icon" href="#" aria-label="目录"><i class="fa-solid fa-bars fa-lg"></i></a>
  <a id="menu-icon-tablet" href="#" aria-label="目录"><i class="fa-solid fa-bars fa-lg"></i></a>
  <a id="top-icon-tablet" href="#" aria-label="顶部" onclick="$('html, body').animate({ scrollTop: 0 }, 'fast');" style="display:none;"><i class="fa-solid fa-chevron-up fa-lg"></i></a>
  <span id="menu">
    <span id="nav">
      <ul>
        <!--
       --><li><a href="/">首页</a></li><!--
     --><!--
       --><li><a href="/archives/">归档</a></li><!--
     --><!--
       --><li><a href="/byTalk/">公共表达</a></li><!--
     --><!--
       --><li><a href="/feeling/">瞎说</a></li><!--
     --><!--
       --><li><a href="/search/">搜索</a></li><!--
     -->
      </ul>
    </span>
    <br/>
    <span id="actions">
      <ul>
        
        <li><a class="icon" aria-label="上一篇" href="/2022/11/15/*.d.ts%E5%AF%BC%E5%85%A5import%E5%85%B6%E5%AE%83%E7%B1%BB%E5%9E%8B%E5%AF%BC%E8%87%B4%E5%85%A8%E5%B1%80%E7%B1%BB%E5%9E%8B%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"><i class="fa-solid fa-chevron-left" aria-hidden="true" onmouseover="$('#i-prev').toggle();" onmouseout="$('#i-prev').toggle();"></i></a></li>
        
        
        <li><a class="icon" aria-label="下一篇" href="/2022/11/15/Flex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"><i class="fa-solid fa-chevron-right" aria-hidden="true" onmouseover="$('#i-next').toggle();" onmouseout="$('#i-next').toggle();"></i></a></li>
        
        <li><a class="icon" aria-label="返回顶部" href="#" onclick="$('html, body').animate({ scrollTop: 0 }, 'fast');"><i class="fa-solid fa-chevron-up" aria-hidden="true" onmouseover="$('#i-top').toggle();" onmouseout="$('#i-top').toggle();"></i></a></li>
        <li><a class="icon" aria-label="分享文章" href="#"><i class="fa-solid fa-share-alt" aria-hidden="true" onmouseover="$('#i-share').toggle();" onmouseout="$('#i-share').toggle();" onclick="$('#share').toggle();return false;"></i></a></li>
      </ul>
      <span id="i-prev" class="info" style="display:none;">上一篇</span>
      <span id="i-next" class="info" style="display:none;">下一篇</span>
      <span id="i-top" class="info" style="display:none;">返回顶部</span>
      <span id="i-share" class="info" style="display:none;">分享文章</span>
    </span>
    <br/>
    <div id="share" style="display: none">
      <ul>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.facebook.com/sharer.php?u=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/"><i class="fab fa-facebook " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://twitter.com/share?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&text=ES2020(可选链 ?.)"><i class="fab fa-twitter " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.linkedin.com/shareArticle?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-linkedin " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://pinterest.com/pin/create/bookmarklet/?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&is_video=false&description=ES2020(可选链 ?.)"><i class="fab fa-pinterest " aria-hidden="true"></i></a></li>
  <li><a class="icon" href="mailto:?subject=ES2020(可选链 ?.)&body=Check out this article: http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/"><i class="fa-solid fa-envelope " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://getpocket.com/save?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-get-pocket " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://reddit.com/submit?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-reddit " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.stumbleupon.com/submit?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-stumbleupon " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://digg.com/submit?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-digg " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.tumblr.com/share/link?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&name=ES2020(可选链 ?.)&description="><i class="fab fa-tumblr " aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://news.ycombinator.com/submitlink?u=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&t=ES2020(可选链 ?.)"><i class="fab fa-hacker-news " aria-hidden="true"></i></a></li>
</ul>

    </div>
    
    
      <div id="toc">
        <ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#%E2%80%A6"><span class="toc-number">1.</span> <span class="toc-text">…</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E2%80%9C%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E5%B1%9E%E6%80%A7%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98"><span class="toc-number">1.1.</span> <span class="toc-text">“不存在的属性”的问题</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%8F%AF%E9%80%89%E9%93%BE"><span class="toc-number">1.1.1.</span> <span class="toc-text">可选链</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E7%9F%AD%E8%B7%AF%E6%95%88%E5%BA%94"><span class="toc-number">1.1.2.</span> <span class="toc-text">短路效应</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%85%B6%E5%AE%83%E5%8F%98%E4%BD%93%EF%BC%9A-%EF%BC%8C"><span class="toc-number">1.1.3.</span> <span class="toc-text">其它变体：?.()，?.[]</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%80%BB%E7%BB%93"><span class="toc-number">1.1.4.</span> <span class="toc-text">总结</span></a></li></ol></li></ol></li></ol>
      </div>
    
  </span>
</div>

    
    <div class="content index py4 ">
        
        <article class="post h-entry" itemscope itemtype="http://schema.org/BlogPosting">
  <header>
    
    <h1 class="posttitle p-name" itemprop="name headline">
        ES2020(可选链 ?.)
    </h1>



    <div class="meta">
      <span class="author p-author h-card" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <span class="p-name" itemprop="name">张玉印</span>
      </span>
      
    <div class="postdate">
      
        <time datetime="2022-11-14T16:00:00.000Z" class="dt-published" itemprop="datePublished">2022-11-15</time>
        
      
    </div>


      
    <div class="article-category">
        <i class="fa-solid fa-archive"></i>
        <a class="category-link" href="/categories/Posts/">Posts</a>
    </div>


      
    <div class="article-tag">
        <i class="fa-solid fa-tag"></i>
        <a class="p-category" href="/tags/" rel="tag">#</a>
    </div>


    </div>
  </header>
  

  <div class="content e-content" itemprop="articleBody">
    <h1 id="…"><a href="#…" class="headerlink" title="…"></a>…</h1><p>可选链 <code>?.</code> 是一种访问嵌套对象属性的安全的方式。即使中间的属性不存在，也不会出现错误。</p>
<h2 id="“不存在的属性”的问题"><a href="#“不存在的属性”的问题" class="headerlink" title="“不存在的属性”的问题"></a>“不存在的属性”的问题</h2><p>如果你才刚开始读此教程并学习 <code>JavaScript</code>，那可能还没接触到这个问题，但它却相当常见。</p>
<p>举个例子，假设我们有很多个 <code>user</code> 对象，其中存储了我们的用户数据。</p>
<p>我们大多数用户的地址都存储在 <code>user.address</code> 中，街道地址存储在 <code>user.address.street</code> 中，但有些用户没有提供这些信息。</p>
<p>在这种情况下，当我们尝试获取 <code>user.address.street</code>，而该用户恰好没提供地址信息，我们则会收到一个错误：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;&#125;; <span class="comment">// 一个没有 &quot;address&quot; 属性的 user 对象</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(user.<span class="property">address</span>.<span class="property">street</span>); <span class="comment">// Error!</span></span><br></pre></td></tr></table></figure>

<p>这是预期的结果。<code>JavaScript</code> 的工作原理就是这样的。因为 <code>user.address</code> 为 <code>undefined</code>，尝试读取 <code>user.address.street</code> 会失败，并收到一个错误。</p>
<p>但是在很多实际场景中，我们更希望得到的是 <code>undefined</code>（表示没有 <code>street</code> 属性）而不是一个错误。</p>
<p>……还有另一个例子。在 Web 开发中，我们可以使用特殊的方法调用（例如 <code>document.querySelector(&#39;.elem&#39;)</code>）以对象的形式获取一个网页元素，如果没有这种对象，则返回 <code>null</code>。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果 document.querySelector(&#x27;.elem&#x27;) 的结果为 null，则这里不存在这个元素</span></span><br><span class="line"><span class="keyword">let</span> html = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.elem&#x27;</span>).<span class="property">innerHTML</span>; <span class="comment">// 如果 document.querySelector(&#x27;.elem&#x27;) 的结果为 null，则会出现错误</span></span><br></pre></td></tr></table></figure>

<p>同样，如果该元素不存在，则访问 <code>null</code> 的 <code>.innerHTML</code> 时会出错。在某些情况下，当元素的缺失是没问题的时候，我们希望避免出现这种错误，而是接受 <code>html = null</code> 作为结果。</p>
<p>我们如何实现这一点呢？</p>
<p>可能最先想到的方案是在访问该值的属性之前，使用 <code>if</code> 或条件运算符 <code>?</code> 对该值进行检查，像这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(user.<span class="property">address</span> ? user.<span class="property">address</span>.<span class="property">street</span> : <span class="literal">undefined</span>);</span><br></pre></td></tr></table></figure>

<p>这样可以，这里就不会出现错误了……但是不够优雅。就像你所看到的，<code>&quot;user.address&quot;</code> 在代码中出现了两次。对于嵌套层次更深的属性就会出现更多次这样的重复，这就是问题了。</p>
<p>例如，让我们尝试获取 <code>user.address.street.name</code>。</p>
<p>我们既需要检查 <code>user.address</code>，又需要检查 <code>user.address.street</code>：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;&#125;; <span class="comment">// user 没有 address 属性</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(user.<span class="property">address</span> ? user.<span class="property">address</span>.<span class="property">street</span> ? user.<span class="property">address</span>.<span class="property">street</span>.<span class="property">name</span> : <span class="literal">null</span> : <span class="literal">null</span>);</span><br></pre></td></tr></table></figure>

<p>这样就太扯淡了，并且这可能导致写出来的代码很难让别人理解。</p>
<p>甚至我们可以先忽略这个问题，因为我们有一种更好的实现方式，就是使用 &amp;&amp; 运算符：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;&#125;; <span class="comment">// user 没有 address 属性</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( user.<span class="property">address</span> &amp;&amp; user.<span class="property">address</span>.<span class="property">street</span> &amp;&amp; user.<span class="property">address</span>.<span class="property">street</span>.<span class="property">name</span> ); <span class="comment">// undefined（不报错）</span></span><br></pre></td></tr></table></figure>

<p>依次对整条路径上的属性使用与运算进行判断，以确保所有节点是存在的（如果不存在，则停止计算），但仍然不够优雅。</p>
<p>就像你所看到的，在代码中我们仍然重复写了好几遍对象属性名。例如在上面的代码中，<code>user.address</code> 被重复写了三遍。</p>
<p>这就是为什么可选链 ?. 被加入到了 <code>JavaScript</code> 这门编程语言中。那就是彻底地解决以上所有问题！</p>
<h3 id="可选链"><a href="#可选链" class="headerlink" title="可选链"></a>可选链</h3><p>如果可选链 <code>?.</code> 前面的部分是 <code>undefined</code> 或者 <code>null</code>，它会停止运算并返回该部分。</p>
<p><strong>为了简明起见，在本文接下来的内容中，我们会说如果一个属性既不是 null 也不是 undefined，那么它就“存在”。</strong></p>
<p>换句话说，例如 <code>value?.prop</code>：</p>
<ul>
<li>如果 <code>value</code> 存在，则结果与 <code>value.prop</code> 相同，</li>
<li>否则（当 <code>value</code> 为 <code>undefined/null</code> 时）则返回 <code>undefined</code>。</li>
</ul>
<p>下面这是一种使用 <code>?.</code> 安全地访问 <code>user.address.street</code> 的方式：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;&#125;; <span class="comment">// user 没有 address 属性</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( user?.<span class="property">address</span>?.<span class="property">street</span> ); <span class="comment">// undefined（不报错）</span></span><br></pre></td></tr></table></figure>

<p>代码简洁明了，也不用重复写好几遍属性名。</p>
<p>即使 对象 <code>user</code> 不存在，使用 <code>user?.address</code> 来读取地址也没问题：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( user?.<span class="property">address</span> ); <span class="comment">// undefined</span></span><br><span class="line"><span class="title function_">alert</span>( user?.<span class="property">address</span>.<span class="property">street</span> ); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>

<p><strong>请注意：<code>?.</code> 语法使其前面的值成为可选值，但不会对其后面的起作用。</strong></p>
<p>例如，在 <code>user?.address.street.name</code> 中，<code>?.</code> 允许 <code>user</code> 为 <code>null/undefined</code>，但仅此而已。更深层次的属性是通过常规方式访问的。如果我们希望它们中的一些也是可选的，那么我们需要使用更多的 <code>?.</code> 来替换 <code>.</code>。</p>
<blockquote>
<p>不要过度使用可选链：<br>我们应该只将 ?. 使用在一些东西可以不存在的地方。<br>例如，如果根据我们的代码逻辑，<code>user</code> 对象必须存在，但 <code>address</code> 是可选的，那么我们应该这样写 <code>user.address?.street</code>，而不是这样 <code>user?.address?.street</code>。<br>所以，如果 <code>user</code> 恰巧因为失误变为 <code>undefined</code>，我们会看到一个编程错误并修复它。否则，代码中的错误在不恰当的地方被消除了，这会导致调试更加困难。</p>
<p>可选链 ?. 前的变量必须已声明<br>如果未声明变量 <code>user</code>，那么 <code>user?.anything</code> 会触发一个错误：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ReferenceError: user is not defined</span></span><br><span class="line">user?.<span class="property">address</span>;</span><br></pre></td></tr></table></figure>
</blockquote>
<p><code>?.</code> 前的变量必须已声明（例如 <code>let/const/var</code> <code>user</code> 或作为一个函数参数）。可选链仅适用于已声明的变量。</p>
<h3 id="短路效应"><a href="#短路效应" class="headerlink" title="短路效应"></a>短路效应</h3><p>正如前面所说的，如果 <code>?.</code> 左边部分不存在，就会立即停止运算（“短路效应”）。</p>
<p>所以，如果后面有任何函数调用或者副作用，它们均不会执行。</p>
<p>例如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">user?.<span class="title function_">sayHi</span>(x++); <span class="comment">// 没有 &quot;sayHi&quot;，因此代码执行没有触达 x++</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(x); <span class="comment">// 0，值没有增加</span></span><br></pre></td></tr></table></figure>

<h3 id="其它变体：-，"><a href="#其它变体：-，" class="headerlink" title="其它变体：?.()，?.[]"></a>其它变体：?.()，?.[]</h3><p>可选链 <code>?.</code> 不是一个运算符，而是一个特殊的语法结构。它还可以与函数和方括号一起使用。</p>
<p>例如，将 <code>?.()</code> 用于调用一个可能不存在的函数。</p>
<p>在下面这段代码中，有些用户具有 <code>admin</code> 方法，而有些没有：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> userAdmin = &#123;</span><br><span class="line">  <span class="title function_">admin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;I am admin&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> userGuest = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">userAdmin.<span class="property">admin</span>?.(); <span class="comment">// I am admin</span></span><br><span class="line"></span><br><span class="line">userGuest.<span class="property">admin</span>?.(); <span class="comment">// 啥都没有（没有这样的方法）</span></span><br></pre></td></tr></table></figure>

<p>在这两行代码中，我们首先使用点符号（<code>user1.admin</code>）来获取 <code>admin</code> 属性，因为用户对象一定存在，因此可以安全地读取它。</p>
<p>然后 <code>?.()</code> 会检查它左边的部分：如果 <code>admin</code> 函数存在，那么就调用运行它（对于 <code>user1</code>）。否则（对于 <code>user2</code>）运算停止，没有错误。</p>
<p>如果我们想使用方括号 <code>[]</code> 而不是点符号 <code>.</code> 来访问属性，语法 <code>?.[]</code> 也可以使用。跟前面的例子类似，它允许从一个可能不存在的对象上安全地读取属性。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user1 = &#123;</span><br><span class="line">  <span class="attr">firstName</span>: <span class="string">&quot;John&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> user2 = <span class="literal">null</span>; <span class="comment">// 假设，我们不能授权此用户</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> key = <span class="string">&quot;firstName&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( user1?.[key] ); <span class="comment">// John</span></span><br><span class="line"><span class="title function_">alert</span>( user2?.[key] ); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>( user1?.[key]?.<span class="property">something</span>?.<span class="property">not</span>?.<span class="property">existing</span>); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>

<p>此外，我们还可以将 <code>?.</code> 跟 <code>delete</code> 一起使用：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> user?.<span class="property">name</span>; <span class="comment">// 如果 user 存在，则删除 user.name</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>我们可以使用 <code>?.</code> 来安全地读取或删除，但不能写入：<br>可选链 <code>?.</code> 不能用在赋值语句的左侧。<br>例如：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = <span class="literal">null</span>;</span><br><span class="line">user?.<span class="property">name</span> = <span class="string">&quot;John&quot;</span>; <span class="comment">// Error，不起作用</span></span><br><span class="line"><span class="comment">// 因为它在计算的是 undefined = &quot;John&quot;</span></span><br></pre></td></tr></table></figure>

<p>这还不是那么智能。</p>
</blockquote>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>可选链 <code>?.</code> 语法有三种形式：</p>
<p><code>obj?.prop</code> —— 如果 <code>obj</code> 存在则返回 <code>obj.prop</code>，否则返回 <code>undefined</code>。<br><code>obj?.[prop]</code> —— 如果 <code>obj</code> 存在则返回 <code>obj[prop]</code>，否则返回 <code>undefined</code>。<br><code>obj.method?.()</code> —— 如果 <code>obj.method</code> 存在则调用 <code>obj.method()</code>，否则返回 <code>undefined</code>。<br>正如我们所看到的，这些语法形式用起来都很简单直接。<code>?.</code> 检查左边部分是否为 <code>null/undefined</code>，如果不是则继续运算。</p>
<p><code>?.</code> 链使我们能够安全地访问嵌套属性。</p>
<p>但是，我们应该谨慎地使用 <code>?.</code>，仅在当左边部分不存在也没问题的情况下使用为宜。以保证在代码中有编程上的错误出现时，也不会对我们隐藏。</p>

  </div>
</article>



        
          <div id="footer-post-container">
  <div id="footer-post">

    <div id="nav-footer" style="display: none">
      <ul>
        
          <li><a href="/">首页</a></li>
        
          <li><a href="/archives/">归档</a></li>
        
          <li><a href="/byTalk/">公共表达</a></li>
        
          <li><a href="/feeling/">瞎说</a></li>
        
          <li><a href="/search/">搜索</a></li>
        
      </ul>
    </div>

    
    
      <div id="toc-footer" style="display: none">
        <ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#%E2%80%A6"><span class="toc-number">1.</span> <span class="toc-text">…</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E2%80%9C%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E5%B1%9E%E6%80%A7%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98"><span class="toc-number">1.1.</span> <span class="toc-text">“不存在的属性”的问题</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%8F%AF%E9%80%89%E9%93%BE"><span class="toc-number">1.1.1.</span> <span class="toc-text">可选链</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E7%9F%AD%E8%B7%AF%E6%95%88%E5%BA%94"><span class="toc-number">1.1.2.</span> <span class="toc-text">短路效应</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%85%B6%E5%AE%83%E5%8F%98%E4%BD%93%EF%BC%9A-%EF%BC%8C"><span class="toc-number">1.1.3.</span> <span class="toc-text">其它变体：?.()，?.[]</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%80%BB%E7%BB%93"><span class="toc-number">1.1.4.</span> <span class="toc-text">总结</span></a></li></ol></li></ol></li></ol>
      </div>
    

    <div id="share-footer" style="display: none">
      <ul>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.facebook.com/sharer.php?u=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/"><i class="fab fa-facebook fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://twitter.com/share?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&text=ES2020(可选链 ?.)"><i class="fab fa-twitter fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.linkedin.com/shareArticle?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-linkedin fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://pinterest.com/pin/create/bookmarklet/?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&is_video=false&description=ES2020(可选链 ?.)"><i class="fab fa-pinterest fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" href="mailto:?subject=ES2020(可选链 ?.)&body=Check out this article: http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/"><i class="fa-solid fa-envelope fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://getpocket.com/save?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-get-pocket fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://reddit.com/submit?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-reddit fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.stumbleupon.com/submit?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-stumbleupon fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://digg.com/submit?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&title=ES2020(可选链 ?.)"><i class="fab fa-digg fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="http://www.tumblr.com/share/link?url=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&name=ES2020(可选链 ?.)&description="><i class="fab fa-tumblr fa-lg" aria-hidden="true"></i></a></li>
  <li><a class="icon" target="_blank" rel="noopener" href="https://news.ycombinator.com/submitlink?u=http://example.com/2022/11/15/ES2020(%E5%8F%AF%E9%80%89%E9%93%BE%20?.)/&t=ES2020(可选链 ?.)"><i class="fab fa-hacker-news fa-lg" aria-hidden="true"></i></a></li>
</ul>

    </div>

    <div id="actions-footer">
        <a id="menu" class="icon" href="#" onclick="$('#nav-footer').toggle();return false;"><i class="fa-solid fa-bars fa-lg" aria-hidden="true"></i> 菜单</a>
        
          <a id="toc" class="icon" href="#" onclick="$('#toc-footer').toggle();return false;"><i class="fa-solid fa-list fa-lg" aria-hidden="true"></i> 目录</a>
        
        <a id="share" class="icon" href="#" onclick="$('#share-footer').toggle();return false;"><i class="fa-solid fa-share-alt fa-lg" aria-hidden="true"></i> 分享</a>
        <a id="top" style="display:none" class="icon" href="#" onclick="$('html, body').animate({ scrollTop: 0 }, 'fast');"><i class="fa-solid fa-chevron-up fa-lg" aria-hidden="true"></i> 返回顶部</a>
    </div>

  </div>
</div>

        
        <footer id="footer">
  <div class="footer-left">
    Copyright &copy;
    
    
    2018-2023
    玉印
  </div>
  <div class="footer-right">
    <nav>
      <ul>
        <!--
      --><li><a href="/">首页</a></li><!--
    --><!--
      --><li><a href="/archives/">归档</a></li><!--
    --><!--
      --><li><a href="/byTalk/">公共表达</a></li><!--
    --><!--
      --><li><a href="/feeling/">瞎说</a></li><!--
    --><!--
      --><li><a href="/search/">搜索</a></li><!--
    -->
      </ul>
      <ul>
        
          <!-- 不蒜子统计 -->
          <span id="busuanzi_container_site_pv">
              本站总访问量<span id="busuanzi_value_site_pv"></span>次
          </span>
          <span class="post-meta-divider">|</span>
          <span id="busuanzi_container_site_uv" style='display:none'>
                  本站访客数<span id="busuanzi_value_site_uv"></span>人
          </span>
        <script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>
        
      </ul>
    </nav>
  </div>
  
</footer>


    </div>
    <!-- styles -->



  <link rel="preload" as="style" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" crossorigin="anonymous" onload="this.onload=null;this.rel='stylesheet'"/>


    <!-- jquery -->

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" crossorigin="anonymous"></script>




<!-- clipboard -->

  
    <script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.7/clipboard.min.js" crossorigin="anonymous"></script>
  
  <script type="text/javascript">
  $(function() {
    // copy-btn HTML
    var btn = "<span class=\"btn-copy tooltipped tooltipped-sw\" aria-label=\"复制到粘贴板！\">";
    btn += '<i class="fa-regular fa-clone"></i>';
    btn += '</span>';
    // mount it!
    $(".highlight table").before(btn);
    var clip = new ClipboardJS('.btn-copy', {
      text: function(trigger) {
        return Array.from(trigger.nextElementSibling.querySelectorAll('.code')).reduce((str,it)=>str+it.innerText+'\n','')
      }
    });
    clip.on('success', function(e) {
      e.trigger.setAttribute('aria-label', "复制成功！");
      e.clearSelection();
    })
  })
  </script>


<script src="/js/main.js"></script>

<!-- search -->

<!-- Baidu Analytics -->

  <script type="text/javascript">
        var _hmt = _hmt || [];
        (function() {
          var hm = document.createElement("script");
          hm.src = "https://hm.baidu.com/hm.js?9233b83248060396e1e1d93186743de8";
          var s = document.getElementsByTagName("script")[0];
          s.parentNode.insertBefore(hm, s);
        })();
        </script>

<!-- Cloudflare Analytics -->

<!-- Disqus Comments -->

<!-- utterances Comments -->

</body>
</html>
